/**
 * Problem 03 : Virus in my Array

 * рждрзЛржорж╛ржХрзЗ deleteInvalids() ржирж╛ржорзЗ ржПржоржи ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи ржХрзНрж░рж┐ржпрж╝рзЗржЯ ржХрж░рждрзЗ рж╣ржмрзЗ ржпрж╛ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржПржХржЯрж┐ Array ржирзЗржмрзЗред 
   ржлрж╛ржВрж╢ржиржЯрж┐ ржЖрж░рзЗржХржЯрж┐ Array рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржпрзЗржЦрж╛ржирзЗ ржнрзНржпрж╛рж▓рзБржЧрзБрж▓рзЛ рж╣ржмрзЗ рж╢рзБржзрзБ ржирж╛ржорзНржмрж╛рж░ред ржЕрж░рзНржерж╛рзО Array ржПрж░ ржпрзЗ рж╕ржХрж▓ elements 
   ржирж╛ржорзНржмрж╛рж░ ржирж╛, рждрж╛ржжрзЗрж░ ржбрж┐рж▓рж┐ржЯ ржХрж░рзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж╛ржорзНржмрж╛рж░ ржЧрзБрж▓рзЛржХрзЗ Array ржЖржХрж╛рж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рждрзЗ рж╣ржмрзЗред рждрзБржорж┐ ржпржжрж┐ ржПржЗ ржлрж╛ржВрж╢ржирзЗ ржПржЗ 
   [NaN, 1, 12, 0, -1, undefined] Array ржЯрж┐ ржкрж╛рж╕ ржХрж░рзЛ рждрж╛рж╣рж▓рзЗ рж╕рзЗ рждрзЛржорж╛ржХрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ [1, 12, 0, -1] 

 * Input: ржлрж╛ржВрж╢ржиржЯрж┐ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ржПржХржЯрж┐ Arrayред Array ржПрж░ ржЙржкрж╛ржжрж╛ржи ржЧрзБрж▓рзЛрж░ Datatype ржпрзЗржХрзЛржирзЛ ржзрж░ржирзЗрж░ рж╣рждрзЗ ржкрж╛рж░рзЗред 
 
 * Output: ржлрж╛ржВрж╢ржиржЯрж┐ ржЖржЙржЯржкрзБржЯ ржжрзЗржмрзЗ ржЖрж░рзЗржХржЯрж┐ Arrayред Array ржПрж░ ржЙржкрж╛ржжрж╛ржи ржЧрзБрж▓рзЛ рж╣ржмрзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж╛ржорзНржмрж╛рж░ред 

 * Challenge ЁЯУв: ржлрж╛ржВрж╢ржиржЯрж┐рждрзЗ Array ржЫрж╛ржбрж╝рж╛ ржЕржирзНржп ржХрзЛржирзЛ ржнрзНржпрж╛рж▓рзБржкрж╛рж╕ ржХрж░рж▓рзЗ рж╕рзЗржЯрж╛ ржПржХржЯрж╛ error message рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред
 */


function deleteInvalids(array) {
    let numbers = [];
    if(Array.isArray(array) === true) {
        for(let i = 0; i < array.length; i++) {
            const element = array[i];
            if (typeof element === "number" && isNaN(element) === false) {               
                numbers.push(element);                
            }
        }
        return numbers;
    }
    else {
        return "Please Provide an array";
    }
}

const array = [NaN, 1, 12, 0, -1, undefined];
const array2 = ["1" , {num:2} , NaN ];
const array3 = [1, null, undefined, 18, -19, NaN, "12", [1, 2], { ob: "lala" }];
const array4 = [ 1 , 2 , -3 ];
const number = {num: [ 1 , 2 , 3 ]};

console.log(deleteInvalids(array));
console.log(deleteInvalids(array2));
console.log(deleteInvalids(array3));
console.log(deleteInvalids(array4));
console.log(deleteInvalids(number));

const nan = NaN;
console.log(typeof nan);